<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:macro name="diffbot">
<xacro:property name="PI" value="3.1415926535897931"/>

<!-- Constants for robot dimensions -->
<xacro:property name="base_mass" value="30.0" />
<xacro:property name="wheel_mass" value="0.3" />
<xacro:property name="base_width" value="0.62" />
<xacro:property name="base_length" value="1.016" />
<xacro:property name="base_height" value="0.51" />
<xacro:property name="wheel_len" value="0.1" />
<xacro:property name="wheel_radius" value="0.165" />
<xacro:property name="wheel_yoff" value="0.13"/>
<xacro:property name="wheel_zoff" value="0.054"/>
<xacro:property name="base_top_width" value="0.749"/>
<xacro:property name="base_top_height" value="0.305"/>
<xacro:property name="lidar_pole_side" value="0.025"/> <!-- TODO measure lidar pole values -->
<xacro:property name="lidar_pole_height" value="0.6"/>
<xacro:property name="lidar_pole_xoff" value="0.5"/>
<xacro:property name="lidar_pole_mass" value="2.0"/>

<!-- Constants for simulated caster wheel-->
<xacro:property name="caster_mass" value="0.1"/>
<xacro:property name="caster_radius" value="0.105"/>
<xacro:property name="caster_xoff" value="0.15"/>



<xacro:include filename="inertial_macros.xacro" />

<!-- Base link -->
<link name="base_link">
</link>

<!-- Base footprint joint and link -->
<joint name="base_footprint_joint" type="fixed">
  <parent link="base_link"/>
  <child link="base_footprint"/>
  <origin xyz="-0.35 0 ${-wheel_radius+wheel_zoff}"/>
</joint>
<link name="base_footprint">
</link>

<!-- Chassis joint -->
<joint name="chassis_joint" type="fixed">
  <parent link="base_link"/>
  <child link="chassis"/>
  <origin xyz="-0.85 0 0"/>
</joint>

<!-- Chassis link -->
<link name="chassis">
  <visual>
    <origin xyz="${base_length/2} 0 ${base_height/2}" rpy="0 0 0"/>
    <geometry>
    <box size="${base_length} ${base_width} ${base_height}" />
    </geometry>
    <material name="white"/>
  </visual>
  <collision>
    <origin xyz="${base_length/2} 0 ${base_height/2}" rpy="0 0 0"/>
    <geometry>
    <box size="${base_length} ${base_width} ${base_height}" />
    </geometry>
  </collision>
  <xacro:inertial_box mass="${base_mass}" x="${base_length}" y="${base_width}" z="${base_height}"> <!-- inertial macro -->
    <origin xyz="${base_length/2} 0 ${base_height/2}" rpy="0 0 0"/>
  </xacro:inertial_box>
</link>


<!-- Left wheel joint -->
<joint name="left_wheel_joint" type="continuous">
  <parent link="base_link"/>
  <child link="left_wheel"/>
  <origin xyz="0 ${base_width/2+wheel_yoff} ${wheel_zoff}" rpy="-${pi/2} 0 0"/>
  <axis xyz="0 0 1"/>
  <dynamics damping="0.0"/>
</joint>

<!-- Left wheel Link -->
<link name="left_wheel">
  <collision>
    <origin xyz="0 0 0"/>
    <geometry>
      <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
    </geometry>
  </collision>
  <visual>
    <origin xyz="0 0 0"/>
    <geometry>
      <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
    </geometry>
    <material name="black"/>
  </visual>
  <inertial>
    <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
    <mass value="${wheel_mass}"/>
    <inertia
      ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
      iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_len*wheel_len)}" iyz="0.0"
      izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
  </inertial>
</link>

<!-- Right wheel joint -->
<joint name="right_wheel_joint" type="continuous">
  <parent link="base_link"/>
  <child link="right_wheel"/>
  <origin xyz="0 ${-(base_width/2+wheel_yoff)} ${wheel_zoff}" rpy="${pi/2} 0 0"/>
  <axis xyz="0 0 -1"/>
  <dynamics damping="0.0"/>
</joint>

<!-- Right wheel Link -->
<link name="right_wheel">
  <collision>
    <geometry>
      <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
    </geometry>
  </collision>
  <visual>
    <geometry>
      <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
    </geometry>
    <material name="black"/>
  </visual>
  <inertial>
    <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
    <mass value="${wheel_mass}"/>
    <inertia
      ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
      iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_len*wheel_len)}" iyz="0.0"
      izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
  </inertial> <!-- for some reason, the inertial cylinder macro was not parsing -->
</link>

  <!-- Caster joint -->
<joint name="caster_joint" type="fixed">
  <parent link="chassis"/>
  <child link="caster_sphere"/>
  <origin xyz="${caster_xoff} 0 0"/>
</joint>

<!-- Caster link -->
<link name="caster_sphere">
  <visual>
    <geometry>
      <sphere radius="${caster_radius}"/>
    </geometry>
  <material name="white"/>
  </visual>
  <collision>
    <geometry>
      <sphere radius="${caster_radius}"/>
    </geometry>
  </collision>
  <inertial>
    <mass value="${caster_mass}" />
    <inertia ixx="${(2/5) * caster_mass * (caster_radius*caster_radius)}" ixy="0.0" ixz="0.0"
            iyy="${(2/5) * caster_mass * (caster_radius*caster_radius)}" iyz="0.0"
            izz="${(2/5) * caster_mass * (caster_radius*caster_radius)}" />
  </inertial>
</link>


<!-- Lidar pole joint-->
<joint name="lidar_pole_joint" type="fixed">
  <parent link="chassis"/>
  <child link="lidar_pole"/>
  <origin xyz="${lidar_pole_xoff} 0 ${(3/2) * base_height}"/>
</joint>

<!-- Lidar pole link-->
<link name="lidar_pole">
  <visual>
    <geometry>
      <box size="${lidar_pole_side} ${lidar_pole_side} ${lidar_pole_height}"/>
    </geometry>
  <material name="grey"/>
  </visual>
  <collision>
    <geometry>
      <box size="${lidar_pole_side} ${lidar_pole_side} ${lidar_pole_height}"/>
    </geometry>
  </collision>
  <xacro:inertial_box mass="${lidar_pole_mass}" x="${lidar_pole_side}" y="${lidar_pole_side}" z="${lidar_pole_height}"> <!-- inertial macro -->
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:inertial_box>
</link>

<!-- Lidar joint and link -->
<xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="lidar_pole" name="velodyne" topic="/velodyne_points" organize_cloud="false" hz="10" samples="440" gpu="false">
    <origin xyz="0 0 ${lidar_pole_height/2}" rpy="0 0 0" />
  </xacro:VLP-16>


</xacro:macro>
</robot>
